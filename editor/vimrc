""""""""""""""""""""""""""""""""""" PLUGINS """"""""""""""""""""""""""""""""""""

if filereadable(expand("~/.vimrc.plugins"))
    source ~/.vimrc.plugins
endif

""""""""""""""""""""""""""""""""""" GENERAL """"""""""""""""""""""""""""""""""""

let mapleader=","
set nocompatible
set shell=/bin/bash

set background=dark " dark background

filetype plugin indent on   " autodetect file type
syntax on                   " syntax highlighting
scriptencoding utf-8
set encoding=utf-8
set termencoding=utf-8
set t_ut=
set ttyscroll=10
set ttyfast

if has("termguicolors")
    set termguicolors
endif

if has('clipboard')
    if has('unnamedplus')  " When possible use + register for copy-paste
        set clipboard=unnamed,unnamedplus
    else         " On mac and Windows, use * register for copy-paste
        set clipboard=unnamed
    endif
endif

set virtualedit=onemore  " allow to move one character after end of line

set ruler                   " Show the ruler
set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) " A ruler on steroids
set showcmd                 " Show partial commands in status line and
                            " Selected characters/lines in visual mode

set mouse=""             " disable mouse
set noswapfile           " disable swap files
set autochdir            " auto change current directory to file directory
set hidden               " Allow buffer switching without saving
set history=1000
set number
set relativenumber

" For when you forget to sudo.. Really Write the file.
cmap w!! w !sudo tee % >/dev/null

" Shortcuts
" Change Working Directory to that of the current file
cmap cwd lcd %:p:h
cmap cd. lcd %:p:h

noremap <leader>tn :setlocal invnumber<CR>
noremap <leader>hl :nohl<CR>


"""""""""""""""""""""""""""""""""" APPERENCE """""""""""""""""""""""""""""""""""

color base16-gruvbox-dark-hard
let base16colorspace=256  " Access colors present in 256 colorspace

set tabpagemax=15               " Only show 15 tabs
set showmode                    " Display the current mode

set cursorline                  " Highlight current line

highlight clear SignColumn      " SignColumn should match background
highlight clear LineNr          " Current line number row will have same background color in relative mode

set laststatus=2                " always display statusline
set statusline=%<%n\ %F\ %m\ %r\ %y\ 0x%B,%b%=%l:%c\ %P

set backspace=indent,eol,start  " Backspace for dummies
set linespace=0                 " No extra spaces between rows
set showmatch                   " Show matching brackets/parenthesis
set incsearch                   " Find as you type search
set hlsearch                    " Highlight search terms
set winminheight=0              " Windows can be 0 line high
set ignorecase                  " Case insensitive search
set smartcase                   " Case sensitive when uc present
set wildmenu                    " Show list instead of just completing
set wildmode=list:longest,full  " Command <Tab> completion, list matches, then longest common part, then all.
set whichwrap=b,s,h,l,<,>,[,]   " Backspace and cursor keys wrap too
set scrolljump=5                " Lines to scroll when cursor leaves screen
set scrolloff=3                 " Minimum lines to keep above and below cursor
set colorcolumn=81              " higlight column 81
set list!
set listchars=tab:Â·\ ,trail:.   " Highlight problematic whitespace
set fillchars+=vert:\ 
" set spell spelllang=en_us,ru
set vb t_vb=                    " No more beeps
set lazyredraw
set nofoldenable

"""""""""""""""""""""""""""""""""" FORMATTING """"""""""""""""""""""""""""""""""

set autoindent                  " Indent at the same level of the previous line
set shiftwidth=4                " Use indents of 4 spaces
set expandtab                   " Tabs are spaces, not tabs
set tabstop=4                   " An indentation every four columns
set softtabstop=4               " Let backspace delete indent
set nojoinspaces                " Prevents inserting two spaces after punctuation on a join (J)
set splitright                  " Puts new vsplit windows to the right of the current
set splitbelow                  " Puts new split windows to the bottom of the current

""""""""""""""""""""""""""""""""" KEY MAPPING """"""""""""""""""""""""""""""""""

nmap <C-j> <C-W>j
nmap <C-k> <C-W>k
nmap <C-h> <C-W>h
nmap <C-l> <C-W>l

nmap j gj
nmap k gk

nnoremap <S-y> :NERDTreeToggle<CR>

""""""""""""""" Fugitive """""""""""""""

nnoremap <leader>gd :Gvdiff<CR>
nnoremap <leader>gs :Gstatus<CR>


""""""""""""""" NERDTree """""""""""""""

let g:NERDTreeAutoDeleteBuffer = 1
let g:NERDTreeNodeDelimiter = "\u00a0"

"""""""""""" NERDCommenter """"""""""""

let g:NERDSpaceDelims = 1

"""""""""""""""" vim-go """"""""""""""""

let g:go_highlight_functions = 1
let g:go_highlight_methods = 0
let g:go_highlight_fields = 0
let g:go_highlight_types = 0
let g:go_highlight_operators = 0
let g:go_highlight_build_constraints = 1
let g:go_addtags_transform = "camelcase"
let g:go_fmt_command = "goimports"
let g:go_def_mapping_enabled = 1

let g:go_term_enabled = 1
let g:go_term_close_on_exit = 0


""""""""""""""" ack.vim """"""""""""""""

cnoreabbrev Ack Ack!
nnoremap <Leader>a :Ack!<Space>

if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

if executable('rg')
  set grepprg=rg\ --no-heading\ --vimgrep
  set grepformat=%f:%l:%c:%m
endif

""""""""""""""" undotree """""""""""""""

set undodir=$HOME/dotfiles/editor/.vimdid/
set undofile                " So is persistent undo ...

""""""""""""""""" fzf  """"""""""""""""""

map <C-p> :Files<CR>
nmap <leader>; :Buffers<CR>

let g:fzf_layout = { 'down': '~20%' }
command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview('up:60%')
  \           : fzf#vim#with_preview('right:50%:hidden', '?'),
  \   <bang>0)

"""""""""""""""" tagbar  """""""""""""""

let g:tagbar_ctags_bin = '/usr/local/opt/ctags/bin/ctags'

let g:tagbar_type_go = {
	\ 'ctagstype' : 'go',
	\ 'kinds'     : [
		\ 'p:package',
		\ 'i:imports:1',
		\ 'c:constants',
		\ 'v:variables',
		\ 't:types',
		\ 'n:interfaces',
		\ 'w:fields',
		\ 'e:embedded',
		\ 'm:methods',
		\ 'r:constructor',
		\ 'f:functions'
	\ ],
	\ 'sro' : '.',
	\ 'kind2scope' : {
		\ 't' : 'ctype',
		\ 'n' : 'ntype'
	\ },
	\ 'scope2kind' : {
		\ 'ctype' : 't',
		\ 'ntype' : 'n'
	\ },
	\ 'ctagsbin'  : 'gotags',
	\ 'ctagsargs' : '-sort -silent'
\ }

""""""""""""""""" ALE """"""""""""""""""

let g:ale_enable=0
let g:ale_linters = {
	\ 'go': ['gopls'],
    \ 'python': ['flake8', 'pylint'],
	\}

"""""""""""""" Rust """""""""""""""""""

let g:rust_clip_command = 'pbcopy'
let g:rustfmt_autosave = 1
